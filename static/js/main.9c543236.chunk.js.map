{"version":3,"sources":["redux/todo/todo.types.js","redux/todo/todo.reducer.js","redux/rootReducers.js","redux/store.js","theme.js","Components/ContentTodo/ContentTodo.jsx","Components/TodoCard/TodoCard.jsx","redux/todo/todo.actions.js","Views/TodoList/TodoList.jsx","redux/todo/todo.selectors.js","Views/AddTodo/AddTodoForm.jsx","Views/BackgroundFade/BackgroundFade.jsx","App.js","index.js"],"names":["types","ADD_TO_DO","EDIT_TO_DO","DELETE_TO_DO","TOGGLE_STATUS_CHECKITEM_TO_DO","initial_state","todoList","id","subject","describe","checkList","text","status","todoReducer","state","action","type","payload","map","item","filter","todo","todoId","checkItem","itemId","combineReducers","middlewares","logger","createStore","rootReducer","applyMiddleware","theme","createMuiTheme","palette","primary","main","secondary","overrides","MuiCard","root","borderRadius","background","MuiButton","height","boxShadow","border","color","padding","marginBottom","marginTop","paddingLeft","paddingRight","MuiButtonBase","MuiTextField","outline","MuiOutlinedInput","MuiAccordion","marginRight","MuiAccordionDetails","MuiCheckbox","MuiListItemIcon","width","margin","typography","fontFamily","join","useStyles","makeStyles","inputCheck","cursor","describeTitle","CustomCheckbox","withStyles","Checkbox","ContentTodo","toggleStatusCheckItem","classes","React","useState","checked","setChecked","handleChange","event","target","ThemeProvider","className","Accordion","AccordionSummary","expandIcon","aria-label","square","aria-controls","AccordionDetails","Typography","onClick","key","onChange","size","inputProps","spacing","editBtn","textDecoration","fontWeight","deleteBtn","iconTodo","titleTodo","connect","deleteTodo","anchorEl","setAnchorEl","handleClose","Row","Col","Button","aria-haspopup","currentTarget","ListItemIcon","fontSize","Menu","keepMounted","open","Boolean","onClose","MenuItem","to","Swal","fire","title","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","showClass","popup","backdrop","hideClass","customClass","container","header","closeButton","image","content","input","actions","confirmButton","cancelButton","footer","then","result","value","media","marginLeft","addBtn","backgroundColor","addLink","CustomCard","Card","props","Container","CardActionArea","CardMedia","CardContent","gutterBottom","variant","component","createSelector","todoItem","length","minWidth","bullet","display","transform","pos","addCheckItemBtn","saveBtn","mapStateToProps","createStructuredSelector","addTodo","editTodo","history","useHistory","useParams","tempraryTodo","useSelector","find","setTodo","checkItems","setCheckItems","handleChangeItem","name","Form","onSubmit","preventDefault","push","handleSubmit","FormGroup","TextField","fullWidth","label","required","handleChangeCheckItem","defaultValue","CardActions","slides","url","BackgroundFade","index","set","transitions","useTransition","from","opacity","enter","leave","config","molasses","useEffect","setInterval","div","style","backgroundImage","routes","path","Component","AddTodoForm","TodoList","App","store","overflowY","position","exact","match","CSSTransition","in","timeout","classNames","unmountOnExit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c543236.chunk.js","sourcesContent":["const types = {\r\n    ADD_TO_DO : \"ADD_TO_DO\" ,\r\n    EDIT_TO_DO : \"EDIT_TO_DO\" ,\r\n    DELETE_TO_DO : \"DELETE_TO_DO\" ,\r\n    TOGGLE_STATUS_CHECKITEM_TO_DO : \"TOGGLE_STATUS_CHECKITEM_TO_DO\" \r\n\r\n}\r\nexport default types;","import types from './todo.types';\r\n\r\nconst initial_state = {\r\n    todoList: [\r\n        {\r\n            id: 1,\r\n            subject: \"Subject Todo\",\r\n            describe:'Summary Describetion',\r\n            checkList: [\r\n                {\r\n                    id: 1,\r\n                    text: \"first job\",\r\n                    status: false\r\n                }, {\r\n                    id: 2,\r\n                    text: \"second job\",\r\n                    status: false\r\n                }\r\n            ]\r\n        }, {\r\n            id: 2,\r\n            subject: \"Subject Todo\",\r\n            describe:'Summary Describetion',\r\n            checkList: [\r\n                {\r\n                    id: 1,\r\n                    text: \"first job\",\r\n                    status: false\r\n                }, {\r\n                    id: 2,\r\n                    text: \"second job\",\r\n                    status: false\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\nconst todoReducer = (state = initial_state, action) => {\r\n    const {type , payload} = action;\r\n    switch (type) {\r\n        case types.ADD_TO_DO :\r\n            return {\r\n                ...state , \r\n                todoList : [...state.todoList , payload]\r\n            }\r\n        case types.EDIT_TO_DO :\r\n            return {\r\n                ...state , \r\n                todoList : state.todoList.map(item => item.id == payload.id ? payload : item)\r\n            }\r\n        case types.DELETE_TO_DO :\r\n            return {\r\n                ...state , \r\n                    todoList : state.todoList.filter(item => item.id !== payload)\r\n            }\r\n        case types.TOGGLE_STATUS_CHECKITEM_TO_DO :\r\n            return {\r\n                ...state , \r\n                    todoList : state.todoList.map(todo => todo.id == payload.todoId ? \r\n                        {\r\n                            ...todo , checkList : todo.checkList.map(checkItem => checkItem.id == payload.itemId ? \r\n                                {...checkItem , status: !checkItem.status} : checkItem)\r\n                        }    \r\n                    : todo )\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default todoReducer;","import {combineReducers} from 'redux';\r\nimport todoReducer from './todo/todo.reducer';\r\n\r\n\r\nexport default combineReducers({\r\n    todo : todoReducer\r\n})","import {applyMiddleware , createStore} from 'redux';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './rootReducers';\r\n\r\nconst middlewares = [logger];\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    applyMiddleware(...middlewares),\r\n)","import {createMuiTheme} from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#8d109e'\r\n        },\r\n        secondary:{\r\n            main:'#b88e80'\r\n        }\r\n      },\r\n\r\n    overrides: {\r\n        MuiCard:{\r\n            root:{\r\n                // direction:'rtl',\r\n                borderRadius:'10px 10px 10px 10px',\r\n                background:'linear-gradient(to right, #f7c2fdd8 , #ffe3f6de )',\r\n                \r\n            }\r\n        },\r\n        MuiButton: {\r\n            root:{\r\n                height:40,\r\n                // background:'#85858565'\r\n                background:'#b88e8060 ',\r\n                boxShadow:'2px 3px 4px #00000027',\r\n                \r\n            },\r\n            text: {\r\n                borderRadius: '10px 25px 5px 18px',\r\n                border: 0,\r\n                color: '#505050',\r\n                height: 33,\r\n                padding: '0 30px',\r\n                marginBottom:8,\r\n                marginTop:8,\r\n                paddingLeft:10,\r\n                paddingRight:0,\r\n            }\r\n        },\r\n        MuiButtonBase:{\r\n            root:{\r\n                paddingLeft:0,\r\n                paddingRight:0,\r\n            }\r\n        },\r\n        MuiTextField:{\r\n            root:{\r\n                height:'55px',\r\n                borderRadius: '20px 35px ',\r\n                outline:'none',\r\n                border:'2 solid white'\r\n                \r\n            },\r\n        },\r\n        MuiOutlinedInput:{\r\n            root:{\r\n                borderRadius: '20px 35px ',\r\n            },\r\n        },\r\n        MuiAccordion:{\r\n            root:{\r\n                marginRight:'30px',\r\n                background:'linear-gradient(to right, #cae3df , #74c0b9 )',\r\n                borderRadius:'20px 16px 10px 50px'\r\n            },\r\n            MuiAccordionDetails:{\r\n                root:{\r\n                    borderRadius:'20px 16px 10px 50px'\r\n                }\r\n            }\r\n            \r\n        },\r\n        MuiCheckbox:{\r\n            root:{\r\n                borderRadius:'30px'\r\n            }\r\n        },\r\n        MuiListItemIcon:{\r\n            root:{\r\n                width:'20px',\r\n                margin:0,\r\n            }\r\n        }\r\n        \r\n        \r\n\r\n    },\r\n    typography: {\r\n        fontFamily: [\r\n            //   '-apple-system',   'BlinkMacSystemFont',   '\"Segoe UI\"',\r\n            'Yekan',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            //   '\"Apple Color Emoji\"',   '\"Segoe UI Emoji\"',   '\"Segoe UI Symbol\"',\r\n        ].join(',')\r\n    }\r\n});","import React from 'react';\r\nimport {makeStyles , withStyles} from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {theme} from '../../theme';\r\nimport {ThemeProvider} from '@material-ui/core';\r\nimport './ContentTodo.css';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    inputCheck: {\r\n        marginRight: 10\r\n    },\r\n    checkItem: {\r\n        cursor: 'pointer'\r\n    },\r\n    describeTitle: {\r\n        paddingLeft: 5,\r\n        marginBottom: 5\r\n    }\r\n});\r\n\r\nconst CustomCheckbox = withStyles({\r\n    MuiCheckbox:{\r\n        root:{\r\n            borderRadius:'20px',\r\n          //   background:'linear-gradient(to right, #ecececbd , #979797a8)'\r\n          }\r\n    }\r\n    \r\n})(Checkbox)\r\n\r\nexport default function ContentTodo({todo, toggleStatusCheckItem}) {\r\n    const classes = useStyles();\r\n    const [checked,\r\n        setChecked] = React.useState(true);\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={classes.root}>\r\n\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        className={classes.describeTitle}\r\n                        expandIcon={< ExpandMoreIcon />}\r\n                        aria-label=\"Expand\"\r\n                        square={false}\r\n                        aria-controls=\"additional-actions1-content\"\r\n                        id=\"additional-actions1-header\">\r\n                        <p className={classes.describeTitle}>{todo.describe}</p>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Typography color=\"textSecondary\">\r\n                            <ul>\r\n                                {todo\r\n                                    .checkList\r\n                                    .map(checkItem => <span\r\n                                        onClick={() => toggleStatusCheckItem(todo.id, checkItem.id)}\r\n                                        key={`${todo.id}${checkItem.id}`}>\r\n                                        <li >\r\n                                            {checkItem.status\r\n                                                ? <span className={classes.checkItem}>\r\n                                                        <CustomCheckbox\r\n                                                            checked={checked}\r\n                                                            onChange={handleChange}\r\n                                                            color=\"secondary\"\r\n                                                            size=\"small\"\r\n                                                            />\r\n                                                        <del>{checkItem.text}</del>\r\n                                                    </span>\r\n                                                : <span className={classes.checkItem}>\r\n                                                    <Checkbox\r\n                                                        checked={null}\r\n                                                        onChange={handleChange}\r\n                                                        color=\"secondary\"\r\n                                                        inputProps={{\r\n                                                        'aria-label': 'primary checkbox'\r\n                                                    }}/> {checkItem.text}\r\n                                                </span>}\r\n                                        </li>\r\n                                    </span>)}\r\n                            </ul>\r\n                        </Typography>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport {Row, Col} from 'reactstrap';\r\n// import {Link} from 'react-router-dom';\r\nimport {deleteTodo, toggleStatusCheckItem} from '../../redux/todo/todo.actions'\r\nimport {connect} from 'react-redux';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n// import IconButton from '@material-ui/core/IconButton'; import DeleteIcon from\r\n// '@material-ui/icons/Delete';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {Link} from 'react-router-dom';\r\n// import Link from '@material-ui/core/Link';\r\nimport Swal from 'sweetalert2'\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport './TodoCard.css';\r\nimport ContentTodo from '../ContentTodo/ContentTodo';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    editBtn: {\r\n        color: 'blue',\r\n\r\n        '&:hover': {\r\n            color: 'darkblue',\r\n            textDecoration: 'none',\r\n            fontWeight: 'bold'\r\n        }\r\n\r\n    },\r\n\r\n    deleteBtn: {\r\n        color: 'gray',\r\n        '&:hover': {\r\n            color: '#d5172d',\r\n            textDecoration: 'none',\r\n            fontWeight: 'bold'\r\n        }\r\n    },\r\n    iconTodo: {\r\n        color: '#6c5f5d',\r\n        marginRight: 10\r\n    },\r\n    titleTodo:{\r\n        \r\n    }\r\n\r\n\r\n}));\r\n\r\nfunction TodoCard({todo, deleteTodo, toggleStatusCheckItem}) {\r\n\r\n    const classes = useStyles();\r\n    const [anchorEl,\r\n        setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        handleClose();\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'error',\r\n            showCancelButton: true,\r\n            cancelButtonColor: '#3085d6',\r\n            confirmButtonColor: '#eee',\r\n            confirmButtonText: 'Yes, delete it!',\r\n            showClass: {\r\n                popup: 'swal2-noanimation',\r\n                backdrop: 'swal2-noanimation'\r\n            },\r\n            hideClass: {\r\n                popup: '',\r\n                backdrop: ''\r\n            },\r\n            customClass: {\r\n                container: 'container-class',\r\n                popup: 'popup-class',\r\n                header: 'header-class',\r\n                title: 'title-class',\r\n                closeButton: 'close-button-class',\r\n                icon: 'icon-class',\r\n                image: 'image-class',\r\n                content: 'content-class',\r\n                input: 'input-class',\r\n                actions: 'actions-class',\r\n                confirmButton: 'confirm-button-class',\r\n                cancelButton: 'cancel-button-class',\r\n                footer: 'footer-class'\r\n            }\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                deleteTodo(todo.id)\r\n                Swal.fire('Deleted!', 'Your file has been deleted.', 'success')\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col className=\"mx-3\">\r\n                <div>\r\n\r\n                    <Button  aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                        <AssignmentIcon className={classes.iconTodo}/>\r\n                        <p className=\"text-nowrap\">{todo.subject}</p>\r\n                        <ListItemIcon>\r\n                                <ExpandMoreIcon fontSize=\"small\"/>\r\n                            </ListItemIcon>\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}>\r\n                        <MenuItem >\r\n                            <Link to={`/update/${todo.id}`} className={classes.editBtn}>\r\n                            <ListItemIcon>\r\n                                <EditIcon fontSize=\"small\"/>\r\n                            </ListItemIcon>Edit\r\n                            </Link>\r\n                        </MenuItem>\r\n                        {/* <Link> */}\r\n                        <MenuItem onClick={handleDelete} className={classes.deleteBtn}>\r\n                        <ListItemIcon>\r\n                                <DeleteIcon fontSize=\"small\"/>\r\n                            </ListItemIcon>Delete\r\n                        </MenuItem>\r\n                        {/* </Link> */}\r\n                    </Menu>\r\n                </div>\r\n                <ContentTodo todo={todo} toggleStatusCheckItem={toggleStatusCheckItem}/> {/* <p>{todo.subject}</p> */}\r\n                {/* <p className={classes.describeTitle}>{todo.describe}</p>\r\n\r\n                <ul>\r\n                    {todo\r\n                        .checkList\r\n                        .map(checkItem => <span\r\n                            onClick={() => toggleStatusCheckItem(todo.id, checkItem.id)}\r\n                            key={`${todo.id}${checkItem.id}`}>\r\n                            <li >\r\n\r\n                                {checkItem.status\r\n                                    ? <span className={classes.checkItem}><input className={classes.inputCheck} type=\"checkbox\" checked/><del>{checkItem.text}</del></span>\r\n                                    : <span className={classes.checkItem}><input className={classes.inputCheck} type=\"checkbox\" null/>{checkItem.text}</span>}\r\n\r\n                            </li>\r\n                        </span>)}\r\n                </ul> */}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default connect(null, {deleteTodo, toggleStatusCheckItem})(TodoCard);\r\n","import types from './todo.types';\r\n\r\nexport const addTodo = (todo) => {\r\n    return {\r\n        type : types.ADD_TO_DO,\r\n        payload : todo \r\n    }\r\n}\r\n\r\nexport const editTodo = (todo) => {\r\n    return {\r\n        type : types.EDIT_TO_DO,\r\n        payload : todo \r\n    }\r\n}\r\n\r\nexport const deleteTodo = (todo) => {\r\n    return {\r\n        type : types.DELETE_TO_DO,\r\n        payload : todo \r\n    }\r\n}\r\n\r\nexport const toggleStatusCheckItem = (todoId , itemId) => {\r\n    return {\r\n        type : types.TOGGLE_STATUS_CHECKITEM_TO_DO,\r\n        payload : {todoId , itemId} \r\n    }\r\n}","import React from 'react'\r\nimport {Container} from 'reactstrap'\r\nimport TodoCard from '../../Components/TodoCard/TodoCard'\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {theme} from '../../theme';\r\nimport {ThemeProvider} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles , withStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            marginTop: '50px',\r\n        }\r\n    },\r\n    media: {\r\n        height: 240,\r\n        marginRight: 15,\r\n        marginLeft: 0,\r\n        borderRadius: '4px '\r\n    },\r\n    addBtn: {\r\n        height: 35,\r\n        backgroundColor: '#284e43',\r\n        color: 'white'\r\n    },\r\n    addLink: {\r\n\r\n        '&:hover': {\r\n            textDecoration: 'none'\r\n        }\r\n    }\r\n}));\r\n\r\nconst CustomCard = withStyles({\r\n    root:{\r\n      borderRadius:'10px 10px 10px 20px',\r\n      background:'linear-gradient(to right, #ecececdc , #979797c4)'\r\n    }\r\n})(Card)\r\n\r\n\r\nfunction TodoList({todoList, props}) {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container className={classes.root}>\r\n                <CustomCard className={classes.root}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            image= 'https://assets.imgix.net/unsplash/motorbike.jpg?auto=compress&w=900&h=600&fit=crop'\r\n                           title=\"Contemplative Reptile\"/>\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                <Link to='/add' className={classes.addLink}>\r\n                                    <Button size='large' className={classes.addBtn}>\r\n                                        <p>Add Todo</p>\r\n                                    </Button>\r\n                                </Link>\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {todoList.map(todo => <TodoCard key={todo.id} todo={todo}/>)}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </CustomCard>\r\n            </Container>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\n// UnstyledComponent.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n// };\r\n\r\nconst mapStateToProps = state => {\r\n    return {todoList: state.todo.todoList}\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(TodoList);\r\n","import {createSelector} from 'reselect';\r\n\r\nconst todoList = state => state.todo.todoList;\r\n\r\nexport const todoId = createSelector(\r\n    todoList ,\r\n    (todoItem) => todoItem.length + 1\r\n)\r\n\r\n","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Form, FormGroup} from 'reactstrap'\r\nimport {useHistory} from 'react-router-dom';\r\nimport {addTodo, editTodo} from '../../redux/todo/todo.actions';\r\nimport {connect} from 'react-redux';\r\nimport {todoId} from '../../redux/todo/todo.selectors';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useSelector} from \"react-redux\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {theme} from '../../theme';\r\nimport { ThemeProvider } from '@material-ui/core';\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minWidth: 275,\r\n        marginTop: '50px',\r\n        marginLeft:20,\r\n        marginRight:20,\r\n\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)'\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        marginBottom: '50px',\r\n        // border:'none',\r\n        marginRight: '50px'\r\n    },\r\n    pos: {\r\n        marginBottom: 12\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    addCheckItemBtn:{\r\n        backgroundColor: '#aa5091',\r\n        '&:hover':{\r\n            color: '#fff',\r\n            backgroundColor:'#df6bbf',\r\n            fontWeight : 'bold'\r\n        }\r\n    },\r\n    saveBtn:{\r\n        height:40 ,\r\n        marginRight:10,\r\n        backgroundColor: '#2db378',\r\n        '&:hover':{\r\n            backgroundColor: '#17744b',\r\n            color: '#fff',\r\n            fontWeight : 'bold'\r\n        }\r\n    }   \r\n  }));\r\n  \r\n\r\nfunction AddTodoForm({addTodo, todoId, editTodo}) {\r\n    const classes = useStyles();\r\n\r\n    // const [value,setValue] = React.useState('Controlled');\r\n\r\n    // const handleChange = (event) => {\r\n    //     setValue(event.target.value);\r\n    // };\r\n    // const todoId2 = useSelector(state => state.todo.todoList.length + 1)\r\n    let history = useHistory();\r\n    let {id} = useParams();\r\n    const tempraryTodo = useSelector(state => state.todo.todoList.find(item => item.id == id))\r\n    const [todo,\r\n        setTodo] = useState(tempraryTodo\r\n        ? {\r\n            subject: tempraryTodo.subject,\r\n            describe: tempraryTodo.describe\r\n        }\r\n        : {\r\n            subject: '',\r\n            describe: ''\r\n        })\r\n\r\n    const [checkItems,\r\n        setCheckItems] = useState(tempraryTodo\r\n        ? tempraryTodo.checkList\r\n        : [\r\n            {\r\n                id: 1,\r\n                text: '',\r\n                status: false\r\n            }\r\n        ])\r\n\r\n    const addCheckItem = () => {\r\n        setCheckItems([\r\n            ...checkItems, {\r\n                id: checkItems.length + 1,\r\n                text: '',\r\n                status: false\r\n            }\r\n        ])\r\n    }\r\n\r\n    const handleChangeItem = (event) => {\r\n        const {name, value} = event.target;\r\n        setTodo({\r\n            ...todo,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleChangeCheckItem = (event, id) => {\r\n        setCheckItems(checkItems.map(checkItem => checkItem.id === id\r\n            ? {\r\n                ...checkItem,\r\n                text: event.target.value\r\n            }\r\n            : checkItem))\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        tempraryTodo && editTodo({\r\n            id: tempraryTodo.id,\r\n            ...todo,\r\n            checkList: checkItems\r\n        })\r\n\r\n        !tempraryTodo && addTodo({\r\n            id: todoId,\r\n            ...todo,\r\n            checkList: checkItems\r\n        })\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n<ThemeProvider theme={theme}>\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                    Add ToDo\r\n                </Typography>\r\n                <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <FormGroup>\r\n                        {/* <Label htmlFor=\"title\">Title</Label> */}\r\n                        <TextField\r\n                            value={todo.subject}\r\n                            onChange={handleChangeItem}\r\n                            name=\"subject\"\r\n                            id=\"title\"\r\n                            fullWidth\r\n                            label=\"subject Todo\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            />\r\n\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            value={todo.describe}\r\n                            onChange={handleChangeItem}\r\n                            name=\"describe\"\r\n                            id=\"describe\"\r\n                            fullWidth\r\n                            label=\"Describetion Todo\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            />\r\n                    </FormGroup>\r\n                    {checkItems.map(checkItem => <FormGroup key={checkItem.id}>\r\n                        <TextField\r\n                            value={checkItem.text}\r\n                            onChange={(event) => handleChangeCheckItem(event, checkItem.id)}\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            id=\"title\"\r\n                            fullWidth\r\n                            label=\"Check Todo\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            defaultValue=\"Success\"\r\n                            />\r\n                    </FormGroup>)}\r\n                    <CardActions>\r\n                        <Button type=\"button\" variant=\"contained\" color=\"secondary\" className={classes.addCheckItemBtn} onClick={addCheckItem}>Add checkItem</Button>{'  '}\r\n                        <Button type=\"submit\" className={classes.saveBtn}>Save</Button>\r\n                    </CardActions>\r\n                </Form>\r\n            </CardContent>\r\n        </Card>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({todoId})\r\n\r\nexport default connect(mapStateToProps, {addTodo, editTodo})(AddTodoForm)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useTransition, animated, config } from 'react-spring'\r\nimport './BackgroundFade.css'\r\n\r\nconst slides = [\r\n  \r\n  { id: 0, url: 'goldengate.jpg?auto=compress&w=900&h=600&fit=crop&crop=focalpoint&fp-x=.41&fp-y=.43&fp-z=1.59' },\r\n  { id: 1, url: 'mountains.jpg?auto=compress&w=900&h=600&fit=crop&crop=focalpoint&fp-x=.41&fp-y=.43&fp-z=1.59' },\r\n  { id: 2, url: 'alarmclock.jpg?auto=compress&w=900&h=600&fit=crop&crop=focalpoint&fp-x=.41&fp-y=.43&fp-z=1.59' },\r\n  { id: 3, url: 'bridge.jpg?auto=compress&w=900&h=600&fit=crop&crop=focalpoint&fp-x=.41&fp-y=.43&fp-z=1.59' },\r\n  { id: 4, url: 'transport.jpg?auto=compress&w=900&h=600&fit=crop' },\r\n]\r\n\r\nconst BackgroundFade = () => {\r\n  const [index, set] = useState(0)\r\n  const transitions = useTransition(slides[index], item => item.id , {\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n    config: config.molasses,\r\n  })\r\n  useEffect(() => void setInterval(() => set(state => (state + 1) % 5), 3000), [])\r\n  return transitions.map(({ item, props, key }) => (\r\n    <div key={item.id}>\r\n      <animated.div\r\n      className=\"bg\"\r\n      style={{ ...props, backgroundImage: `url(https://assets.imgix.net/unsplash/${item.url}&auto=format&fit=crop)` }}\r\n    />\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default BackgroundFade;","import React from 'react';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport TodoList from './Views/TodoList/TodoList';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport AddTodoForm from './Views/AddTodo/AddTodoForm';\nimport {CSSTransition} from 'react-transition-group'\nimport './App.css';\nimport BackgroundFade from './Views/BackgroundFade/BackgroundFade';\n// import { Container } from '@material-ui/core';\n\nconst routes = [\n    {\n        path: '/update/:id',\n        name: 'AddTodoForm',\n        Component: AddTodoForm\n    }, {\n        path: '/add',\n        name: 'AddTodoForm',\n        Component: AddTodoForm\n    }, {\n        path: '/maktab_React-Redux-ToDo',\n        name: 'TodoList',\n        Component: TodoList\n    }, {\n        path: '/',\n        name: 'TodoList',\n        Component: TodoList\n    }\n]\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <div>\n                <div style={{overflowY:'hidden' , width:'100vw' , height:'100vh' , position:'fixed'}}>\n                <BackgroundFade/>\n            </div>\n                \n                <Router>\n                    <div className=\"container\">\n                        {routes.map(({path, Component}) => (\n                            <Route key={path} exact path={path}>\n                                {({match}) => (\n                                    <CSSTransition in={match != null} timeout={800} classNames=\"page\" unmountOnExit>\n                                        <div className=\"page\">\n                                            <Component/>\n                                        </div>\n                                    </CSSTransition>\n                                )}\n                            </Route>\n                        ))}\n                    </div>\n                </Router>\n                \n            </div>\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App /> , document.getElementById('root')\n);\n\n"],"sourceRoot":""}