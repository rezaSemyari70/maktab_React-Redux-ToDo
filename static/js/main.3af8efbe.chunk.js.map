{"version":3,"sources":["redux/todo/todo.types.js","redux/todo/todo.reducer.js","redux/rootReducers.js","redux/store.js","Components/ContentTodo/ContentTodo.jsx","Components/TodoCard/TodoCard.jsx","redux/todo/todo.actions.js","Views/TodoList/TodoList.jsx","redux/todo/todo.selectors.js","Views/AddTodo/AddTodoForm.jsx","Views/BackgroundFade/BackgroundFade.jsx","App.js","index.js"],"names":["types","ADD_TO_DO","EDIT_TO_DO","DELETE_TO_DO","TOGGLE_STATUS_CHECKITEM_TO_DO","initial_state","todoList","id","subject","describe","checkList","text","status","todoReducer","state","action","type","payload","map","item","filter","todo","todoId","checkItem","itemId","combineReducers","middlewares","logger","createStore","rootReducer","applyMiddleware","useStyles","makeStyles","root","width","inputCheck","marginRight","cursor","describeTitle","paddingLeft","marginBottom","ContentTodo","toggleStatusCheckItem","classes","className","Accordion","AccordionSummary","expandIcon","aria-label","aria-controls","AccordionDetails","Typography","color","onClick","key","checked","null","theme","margin","spacing","editBtn","textDecoration","fontWeight","deleteBtn","iconTodo","connect","deleteTodo","React","useState","anchorEl","setAnchorEl","handleClose","Row","Col","Button","aria-haspopup","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","to","Swal","fire","title","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","showClass","popup","backdrop","hideClass","customClass","container","header","closeButton","image","content","input","actions","confirmButton","cancelButton","footer","then","result","value","marginTop","addBtn","backgroundColor","addLink","props","Container","Card","CardHeader","size","CardBody","createSelector","todoItem","length","minWidth","bullet","display","transform","fontSize","pos","addCheckItemBtn","saveBtn","mapStateToProps","createStructuredSelector","addTodo","editTodo","history","useHistory","useParams","tempraryTodo","useSelector","find","setTodo","checkItems","setCheckItems","handleChangeItem","target","name","CardContent","gutterBottom","Form","onSubmit","preventDefault","push","handleSubmit","FormGroup","TextField","onChange","fullWidth","label","variant","handleChangeCheckItem","CardActions","slides","url","BackgroundFade","index","set","transitions","useTransition","from","opacity","enter","leave","config","molasses","useEffect","setInterval","div","style","backgroundImage","routes","path","Component","AddTodoForm","TodoList","App","store","exact","match","CSSTransition","in","timeout","classNames","unmountOnExit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3af8efbe.chunk.js","sourcesContent":["const types = {\r\n    ADD_TO_DO : \"ADD_TO_DO\" ,\r\n    EDIT_TO_DO : \"EDIT_TO_DO\" ,\r\n    DELETE_TO_DO : \"DELETE_TO_DO\" ,\r\n    TOGGLE_STATUS_CHECKITEM_TO_DO : \"TOGGLE_STATUS_CHECKITEM_TO_DO\" \r\n\r\n}\r\nexport default types;","import types from './todo.types';\r\n\r\nconst initial_state = {\r\n    todoList: [\r\n        {\r\n            id: 1,\r\n            subject: \"Subject Todo\",\r\n            describe:'Summary Describetion',\r\n            checkList: [\r\n                {\r\n                    id: 1,\r\n                    text: \"first job\",\r\n                    status: false\r\n                }, {\r\n                    id: 2,\r\n                    text: \"second job\",\r\n                    status: false\r\n                }\r\n            ]\r\n        }, {\r\n            id: 2,\r\n            subject: \"Subject Todo\",\r\n            describe:'Summary Describetion',\r\n            checkList: [\r\n                {\r\n                    id: 1,\r\n                    text: \"first job\",\r\n                    status: false\r\n                }, {\r\n                    id: 2,\r\n                    text: \"second job\",\r\n                    status: false\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\nconst todoReducer = (state = initial_state, action) => {\r\n    const {type , payload} = action;\r\n    switch (type) {\r\n        case types.ADD_TO_DO :\r\n            return {\r\n                ...state , \r\n                todoList : [...state.todoList , payload]\r\n            }\r\n        case types.EDIT_TO_DO :\r\n            return {\r\n                ...state , \r\n                todoList : state.todoList.map(item => item.id == payload.id ? payload : item)\r\n            }\r\n        case types.DELETE_TO_DO :\r\n            return {\r\n                ...state , \r\n                    todoList : state.todoList.filter(item => item.id !== payload)\r\n            }\r\n        case types.TOGGLE_STATUS_CHECKITEM_TO_DO :\r\n            return {\r\n                ...state , \r\n                    todoList : state.todoList.map(todo => todo.id == payload.todoId ? \r\n                        {\r\n                            ...todo , checkList : todo.checkList.map(checkItem => checkItem.id == payload.itemId ? \r\n                                {...checkItem , status: !checkItem.status} : checkItem)\r\n                        }    \r\n                    : todo )\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default todoReducer;","import {combineReducers} from 'redux';\r\nimport todoReducer from './todo/todo.reducer';\r\n\r\n\r\nexport default combineReducers({\r\n    todo : todoReducer\r\n})","import {applyMiddleware , createStore} from 'redux';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './rootReducers';\r\n\r\nconst middlewares = [logger];\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    applyMiddleware(...middlewares),\r\n)","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport './ContentTodo.css';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    inputCheck:{\r\n        marginRight:10,\r\n    },\r\n    checkItem:{\r\n        cursor:'pointer',\r\n    },\r\n    describeTitle:{\r\n        paddingLeft:5,\r\n        marginBottom:5,\r\n    },\r\n});\r\n\r\n\r\n\r\nexport default function ContentTodo({todo, toggleStatusCheckItem}) {\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n                \r\n            <Accordion>\r\n                <AccordionSummary\r\n                    className={classes.describeTitle}\r\n                    expandIcon={< ExpandMoreIcon />}\r\n                    aria-label=\"Expand\"\r\n                    aria-controls=\"additional-actions1-content\"\r\n                    id=\"additional-actions1-header\">\r\n                    <p className={classes.describeTitle}>{todo.describe}</p>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Typography color=\"textSecondary\">\r\n                        <ul>\r\n                            {todo.checkList\r\n                                .map(checkItem => <span\r\n                                    onClick={() => toggleStatusCheckItem(todo.id, checkItem.id)}\r\n                                    key={`${todo.id}${checkItem.id}`}>\r\n                                    <li >\r\n                                        {checkItem.status\r\n                                            ? <span className={classes.checkItem}><input className={classes.inputCheck} type=\"checkbox\" checked/>\r\n                                                    <del>{checkItem.text}</del>\r\n                                                </span>\r\n                                            : <span className={classes.checkItem}><input className={classes.inputCheck} type=\"checkbox\" null/>{checkItem.text}</span>}\r\n                                    </li>\r\n                                </span>)}\r\n                        </ul>\r\n                    </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport {Row, Col} from 'reactstrap';\r\n// import {Link} from 'react-router-dom';\r\nimport {deleteTodo, toggleStatusCheckItem} from '../../redux/todo/todo.actions'\r\nimport {connect} from 'react-redux';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n// import IconButton from '@material-ui/core/IconButton'; import DeleteIcon from\r\n// '@material-ui/icons/Delete';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {Link} from 'react-router-dom';\r\n// import Link from '@material-ui/core/Link';\r\nimport Swal from 'sweetalert2'\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n// import {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport './TodoCard.css';\r\nimport ContentTodo from '../ContentTodo/ContentTodo';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    editBtn: {\r\n        color: 'blue',\r\n\r\n        '&:hover': {\r\n            color: 'darkblue',\r\n            textDecoration: 'none',\r\n            fontWeight: 'bold'\r\n        }\r\n\r\n    },\r\n\r\n    deleteBtn: {\r\n        color: 'gray',\r\n        '&:hover': {\r\n            color: '#d5172d',\r\n            textDecoration: 'none',\r\n            fontWeight: 'bold'\r\n        }\r\n    },\r\n    // inputCheck:{     marginRight:10, }, checkItem:{     cursor:'pointer', },\r\n    // describeTitle:{     paddingLeft:20, },\r\n    iconTodo: {\r\n        color: '#929292',\r\n        marginRight: 10\r\n    }\r\n\r\n}));\r\n\r\nfunction TodoCard({todo, deleteTodo, toggleStatusCheckItem}) {\r\n\r\n    const classes = useStyles();\r\n    const [anchorEl,\r\n        setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        handleClose();\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'error',\r\n            showCancelButton: true,\r\n            cancelButtonColor: '#3085d6',\r\n            confirmButtonColor: '#eee',\r\n            confirmButtonText: 'Yes, delete it!',\r\n            showClass: {\r\n                popup: 'swal2-noanimation',\r\n                backdrop: 'swal2-noanimation'\r\n            },\r\n            hideClass: {\r\n                popup: '',\r\n                backdrop: ''\r\n            },\r\n            customClass: {\r\n                container: 'container-class',\r\n                popup: 'popup-class',\r\n                header: 'header-class',\r\n                title: 'title-class',\r\n                closeButton: 'close-button-class',\r\n                icon: 'icon-class',\r\n                image: 'image-class',\r\n                content: 'content-class',\r\n                input: 'input-class',\r\n                actions: 'actions-class',\r\n                confirmButton: 'confirm-button-class',\r\n                cancelButton: 'cancel-button-class',\r\n                footer: 'footer-class'\r\n            }\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                deleteTodo(todo.id)\r\n                Swal.fire('Deleted!', 'Your file has been deleted.', 'success')\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div>\r\n\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                        <AssignmentIcon className={classes.iconTodo}/>\r\n                        <p>{todo.subject}</p>\r\n                    </Button>\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}>\r\n                            <MenuItem >\r\n                                <Link to={`/update/${todo.id}`} className={classes.editBtn}>Edit</Link>\r\n                            </MenuItem>\r\n                            {/* <Link> */}\r\n                            <MenuItem onClick={handleDelete} className={classes.deleteBtn}>Delete</MenuItem>\r\n                            {/* </Link> */}\r\n                        </Menu>\r\n                </div>\r\n                <ContentTodo todo={todo} toggleStatusCheckItem={toggleStatusCheckItem}/> \r\n                {/* <p>{todo.subject}</p> */}\r\n                {/* <p className={classes.describeTitle}>{todo.describe}</p>\r\n\r\n                <ul>\r\n                    {todo\r\n                        .checkList\r\n                        .map(checkItem => <span\r\n                            onClick={() => toggleStatusCheckItem(todo.id, checkItem.id)}\r\n                            key={`${todo.id}${checkItem.id}`}>\r\n                            <li >\r\n\r\n                                {checkItem.status\r\n                                    ? <span className={classes.checkItem}><input className={classes.inputCheck} type=\"checkbox\" checked/><del>{checkItem.text}</del></span>\r\n                                    : <span className={classes.checkItem}><input className={classes.inputCheck} type=\"checkbox\" null/>{checkItem.text}</span>}\r\n\r\n                            </li>\r\n                        </span>)}\r\n                </ul> */}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default connect(null, {deleteTodo, toggleStatusCheckItem})(TodoCard);\r\n","import types from './todo.types';\r\n\r\nexport const addTodo = (todo) => {\r\n    return {\r\n        type : types.ADD_TO_DO,\r\n        payload : todo \r\n    }\r\n}\r\n\r\nexport const editTodo = (todo) => {\r\n    return {\r\n        type : types.EDIT_TO_DO,\r\n        payload : todo \r\n    }\r\n}\r\n\r\nexport const deleteTodo = (todo) => {\r\n    return {\r\n        type : types.DELETE_TO_DO,\r\n        payload : todo \r\n    }\r\n}\r\n\r\nexport const toggleStatusCheckItem = (todoId , itemId) => {\r\n    return {\r\n        type : types.TOGGLE_STATUS_CHECKITEM_TO_DO,\r\n        payload : {todoId , itemId} \r\n    }\r\n}","import React from 'react'\r\nimport { Container, Card, CardHeader, CardBody } from 'reactstrap'\r\nimport TodoCard from '../../Components/TodoCard/TodoCard'\r\nimport {connect} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// import PropTypes from 'prop-types';\r\n// import { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// import './TodoList.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        marginTop: '50px'\r\n      },\r\n    },\r\n    addBtn : {\r\n        backgroundColor: '#0b9b67',\r\n        color: 'white',\r\n    },\r\n    addLink:{\r\n        '&:hover':{\r\n            textDecoration:'none',\r\n        }\r\n    }\r\n  }));\r\n\r\n\r\nfunction TodoList({todoList , props}) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.root}>\r\n                <Card id=\"card\">\r\n                    <CardHeader>\r\n                    <Link to='/add' className={classes.addLink}><Button size='large' className={classes.addBtn}><p>Add Todo</p></Button></Link>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        {todoList.map(todo => \r\n                            <TodoCard key={todo.id} todo={todo}/>\r\n                        )}\r\n                    </CardBody>\r\n                </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\n// UnstyledComponent.propTypes = {\r\n//     classes: PropTypes.object.isRequired,\r\n//   };\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        todoList : state.todo.todoList\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps , {})(TodoList );\r\n","import {createSelector} from 'reselect';\r\n\r\nconst todoList = state => state.todo.todoList;\r\n\r\nexport const todoId = createSelector(\r\n    todoList ,\r\n    (todoItem) => todoItem.length + 1\r\n)\r\n\r\n","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Form, FormGroup\r\n    // Row, Col, Container\r\n} from 'reactstrap'\r\nimport {useHistory} from 'react-router-dom';\r\nimport {addTodo, editTodo} from '../../redux/todo/todo.actions';\r\nimport {connect} from 'react-redux';\r\nimport {todoId} from '../../redux/todo/todo.selectors';\r\nimport {createStructuredSelector} from 'reselect';\r\n// import {useSelector} from 'react-redux';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useSelector} from \"react-redux\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minWidth: 275,\r\n        marginTop: '50px'\r\n\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)'\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        marginBottom: '50px'\r\n    },\r\n    pos: {\r\n        marginBottom: 12\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    addCheckItemBtn:{\r\n        backgroundColor: '#f54189',\r\n        '&:hover':{\r\n            color: '#fff',\r\n            fontWeight : 'bold'\r\n        }\r\n    },\r\n    saveBtn:{\r\n        backgroundColor: '#2db378',\r\n        '&:hover':{\r\n            backgroundColor: '#17744b',\r\n            color: '#fff',\r\n            fontWeight : 'bold'\r\n        }\r\n    }   \r\n  }));\r\n  \r\n\r\nfunction AddTodoForm({addTodo, todoId, editTodo}) {\r\n    const classes = useStyles();\r\n\r\n    // const [value,setValue] = React.useState('Controlled');\r\n\r\n    // const handleChange = (event) => {\r\n    //     setValue(event.target.value);\r\n    // };\r\n    // const todoId2 = useSelector(state => state.todo.todoList.length + 1)\r\n    let history = useHistory();\r\n    let {id} = useParams();\r\n    const tempraryTodo = useSelector(state => state.todo.todoList.find(item => item.id == id))\r\n    const [todo,\r\n        setTodo] = useState(tempraryTodo\r\n        ? {\r\n            subject: tempraryTodo.subject,\r\n            describe: tempraryTodo.describe\r\n        }\r\n        : {\r\n            subject: '',\r\n            describe: ''\r\n        })\r\n\r\n    const [checkItems,\r\n        setCheckItems] = useState(tempraryTodo\r\n        ? tempraryTodo.checkList\r\n        : [\r\n            {\r\n                id: 1,\r\n                text: '',\r\n                status: false\r\n            }\r\n        ])\r\n\r\n    const addCheckItem = () => {\r\n        setCheckItems([\r\n            ...checkItems, {\r\n                id: checkItems.length + 1,\r\n                text: '',\r\n                status: false\r\n            }\r\n        ])\r\n    }\r\n\r\n    const handleChangeItem = (event) => {\r\n        const {name, value} = event.target;\r\n        setTodo({\r\n            ...todo,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleChangeCheckItem = (event, id) => {\r\n        setCheckItems(checkItems.map(checkItem => checkItem.id === id\r\n            ? {\r\n                ...checkItem,\r\n                text: event.target.value\r\n            }\r\n            : checkItem))\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        tempraryTodo && editTodo({\r\n            id: tempraryTodo.id,\r\n            ...todo,\r\n            checkList: checkItems\r\n        })\r\n\r\n        !tempraryTodo && addTodo({\r\n            id: todoId,\r\n            ...todo,\r\n            checkList: checkItems\r\n        })\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                    Add ToDo\r\n                </Typography>\r\n                <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <FormGroup>\r\n                        {/* <Label htmlFor=\"title\">Title</Label> */}\r\n                        <TextField\r\n                            value={todo.subject}\r\n                            onChange={handleChangeItem}\r\n                            name=\"subject\"\r\n                            id=\"title\"\r\n                            fullWidth\r\n                            label=\"subject Todo\"\r\n                            variant=\"outlined\"/>\r\n\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            value={todo.describe}\r\n                            onChange={handleChangeItem}\r\n                            name=\"describe\"\r\n                            id=\"describe\"\r\n                            fullWidth\r\n                            label=\"Describetion Todo\"\r\n                            variant=\"outlined\"/>\r\n                    </FormGroup>\r\n                    {checkItems.map(checkItem => <FormGroup key={checkItem.id}>\r\n                        <TextField\r\n                            value={checkItem.text}\r\n                            onChange={(event) => handleChangeCheckItem(event, checkItem.id)}\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            id=\"title\"\r\n                            fullWidth\r\n                            label=\"Check Todo\"\r\n                            variant=\"outlined\"/>\r\n                    </FormGroup>)}\r\n                    <CardActions>\r\n                        <Button type=\"button\" variant=\"contained\" color=\"secondary\" className={classes.addCheckItemBtn} onClick={addCheckItem}>Add checkItem</Button>{'  '}\r\n                        <Button type=\"submit\" className={classes.saveBtn}>Save</Button>\r\n                    </CardActions>\r\n                </Form>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({todoId})\r\n\r\nexport default connect(mapStateToProps, {addTodo, editTodo})(AddTodoForm)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useTransition, animated, config } from 'react-spring'\r\nimport './BackgroundFade.css'\r\n\r\nconst slides = [\r\n  \r\n  { id: 0, url: 'goldengate.jpg?auto=compress&w=900&h=600&fit=crop&crop=focalpoint&fp-x=.41&fp-y=.43&fp-z=1.59' },\r\n  { id: 1, url: 'mountains.jpg?auto=compress&w=900&h=600&fit=crop&crop=focalpoint&fp-x=.41&fp-y=.43&fp-z=1.59' },\r\n  { id: 2, url: 'alarmclock.jpg?auto=compress&w=900&h=600&fit=crop&crop=focalpoint&fp-x=.41&fp-y=.43&fp-z=1.59' },\r\n  { id: 3, url: 'bridge.jpg?auto=compress&w=900&h=600&fit=crop&crop=focalpoint&fp-x=.41&fp-y=.43&fp-z=1.59' },\r\n  { id: 4, url: 'motorbike.jpg?auto=compress&w=900&h=600&fit=crop&crop=focalpoint&fp-x=.41&fp-y=.43&fp-z=1.59' },\r\n]\r\n\r\nconst BackgroundFade = () => {\r\n  const [index, set] = useState(0)\r\n  const transitions = useTransition(slides[index], item => item.id , {\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n    config: config.molasses,\r\n  })\r\n  useEffect(() => void setInterval(() => set(state => (state + 1) % 4), 2000), [])\r\n  return transitions.map(({ item, props, key }) => (\r\n    <animated.div\r\n      key={key}\r\n      className=\"bg\"\r\n      style={{ ...props, backgroundImage: `url(https://assets.imgix.net/unsplash/${item.url}&auto=format&fit=crop)` }}\r\n    />\r\n  ))\r\n}\r\n\r\nexport default BackgroundFade;","import React from 'react';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport TodoList from './Views/TodoList/TodoList';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport AddTodoForm from './Views/AddTodo/AddTodoForm';\nimport {CSSTransition} from 'react-transition-group'\nimport './App.css';\nimport BackgroundFade from './Views/BackgroundFade/BackgroundFade';\n\nconst routes = [\n    {\n        path: '/update/:id',\n        name: 'AddTodoForm',\n        Component: AddTodoForm\n    }, {\n        path: '/add',\n        name: 'AddTodoForm',\n        Component: AddTodoForm\n    }, {\n        path: '/maktab_React-Redux-ToDo',\n        name: 'TodoList',\n        Component: TodoList\n    }, {\n        path: '/',\n        name: 'TodoList',\n        Component: TodoList\n    }\n]\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <div>\n                <BackgroundFade/>\n                <Router>\n                    <div className=\"container\">\n                        {routes.map(({path, Component}) => (\n                            <Route key={path} exact path={path}>\n                                {({match}) => (\n                                    <CSSTransition in={match != null} timeout={800} classNames=\"page\" unmountOnExit>\n                                        <div className=\"page\">\n                                            <Component/>\n                                        </div>\n                                    </CSSTransition>\n                                )}\n                            </Route>\n                        ))}\n                    </div>\n                </Router>\n            </div>\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App /> , document.getElementById('root')\n);\n\n"],"sourceRoot":""}